const constant=getConstants();let csvData=[];function renderTable(e){let t=document.querySelector("#csvTable");t.innerHTML="";let a=document.createElement("table");a.className="table table-bordered";let l=document.createElement("thead");l.className="table-dark",a.appendChild(l);let n=document.createElement("tr");e[0].forEach(e=>{var t=document.createElement("th");t.textContent=e,n.appendChild(t)}),l.appendChild(n);var r=document.createElement("th");r.textContent="Action",n.appendChild(r),l.appendChild(n);let s=document.createElement("tbody");e.slice(1).forEach(e=>{let t=document.createElement("tr");Object.values(e).forEach(e=>{let a=document.createElement("td");a.textContent=e,t.appendChild(a)});let a=document.createElement("td"),l=document.createElement("button");l.textContent="PDF",l.className="btn btn-danger",l.addEventListener("click",()=>{generateMarksheet(e),console.log("Edit button clicked for row:",e)}),a.appendChild(l),t.appendChild(a),s.appendChild(t)}),a.appendChild(s),t.appendChild(a)}function saveCsvFallback(){let e=Papa.unparse(csvData),t=new Blob([e],{type:"text/csv;charset=utf-8;"}),a=document.createElement("a");a.href=URL.createObjectURL(t),a.download="my_excel.csv",a.style.display="none",document.body.appendChild(a),a.click(),document.body.removeChild(a),alert("File saved. Replace the original manually if needed.")}async function saveToExistingFile(){if(!window.showSaveFilePicker){alert("for unsupported browsers"),saveCsvFallback();return}try{let e=await window.showSaveFilePicker({suggestedName:"my_excel_test.csv",types:[{description:"CSV Files",accept:{"text/csv":[".csv"]}},]}),t=await e.createWritable(),a=Papa.unparse(csvData);await t.write(a),await t.close(),alert("File saved successfully!")}catch(l){console.error("Error saving file:",l),alert("Failed to save the file.")}}function generateMarksheet(e){let{jsPDF:t}=window.jspdf,a=new t;var l=parseInt(e[3]),n=parseInt(e[4]),r=parseInt(e[5]),s=parseInt(e[6]),o=parseInt(e[7]),i=parseInt(e[8]),c=$("#class").val();let d=atob(constant.SCHOOL),h="Reg. No: "+constant.REG,m="Student Name: "+e[0],p="Roll No: "+e[1],u="Address: "+e[2],f=[{name:"Mathematics",marks:l,total:100},{name:"Science",marks:o,total:100},{name:"English",marks:n,total:100},{name:"Social Studies",marks:s,total:100},{name:"Hindi",marks:r,total:100},{name:"Sanskrit",marks:i,total:100},],v=f.reduce((e,t)=>e+t.marks,0),_=f.reduce((e,t)=>e+t.total,0),b=(v/_*100).toFixed(2),k="";k=b>=90?"A+":b>=80?"A":b>=70?"B":b>=60?"C":"D",a.setFont("helvetica","bold"),a.setFontSize(18),a.text(d,105,15,null,null,"center"),a.setFontSize(12),a.text(h,105,22,null,null,"center"),a.setFont("helvetica","normal"),a.setFontSize(12),a.text(m,10,40),a.text(p,10,47),a.text("Class: "+c,10,54),a.text(u,10,61);let C=f.map(e=>[e.name,e.marks,e.total]);a.autoTable({startY:70,head:[["Subject","Marks Obtained","Total Marks"]],body:C,theme:"grid",headStyles:{fillColor:[22,160,133]},styles:{fontSize:10}});let x=a.autoTable.previous.finalY+10;a.setFont("helvetica","bold"),a.text(`Total Marks: ${v}/${_}`,10,x),a.text(`Percentage: ${b}%`,10,x+7),a.text(`Grade: ${k}`,10,x+14);let E=a.internal.pageSize.height;a.setFont("helvetica","normal"),a.text("_______________________",10,E-30),a.text("Class Teacher",15,E-25),a.text("_______________________",150,E-30),a.text("Principal",155,E-25),a.save("Class_"+c+"Roll_"+p+"_Marksheet.pdf")}document.getElementById("submit").addEventListener("click",function(e){$("span[id^='error-']").html(""),$(".form-control").removeClass("input-focus");var t=$("#class").find(":selected").val(),a=document.getElementById("uploadFile").files[0];if(!t)return $("#error-class").html("Please select class"),!1;if(!a)return $("#error-uploadFile").html("Please select excel file"),!1;if(a){let l=new FileReader;l.onload=function(e){let a=new Uint8Array(e.target.result),l=XLSX.read(a,{type:"array"}),n="CLASS-"+t,r=l.Sheets[n];if(!r){alert(`Sheet "${n}" not found in the workbook.`),console.error(`Sheet "${n}" not found in the workbook.`);return}console.log("sheet from "+r);let s=XLSX.utils.sheet_to_json(r,{header:1});console.log("Data from "+n+": ",s),renderTable(s)},l.readAsArrayBuffer(a)}});